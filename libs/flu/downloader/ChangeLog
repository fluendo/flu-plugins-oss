2013-03-06  Xavi Artigas  <xartigas@fluendo.com>

	* lib/fludownloader.c: (_report_task_done):
	  - Return valid status codes for file transfers. Apparently libCurl does
	    not provide them, so we only check if the amount of downloaded data
	    is > 0.

2013-03-06  Xavi Artigas  <xartigas@fluendo.com>

	* lib/fludownloader.c: (_schedule_tasks):
	  - Make extra sure that files are not overlapped with HTTP downloads.

2013-03-06  Xavi Artigas  <xartigas@fluendo.com>

	* examples/multidl.c: (data_cb), (main):
	  - Update example with mixed file/HTTP downloads.

2013-03-06  Xavi Artigas  <xartigas@fluendo.com>

	* lib/fludownloader.c: (_schedule_tasks), (fludownloader_new_task):
	  - Do not allow file:// downloads to be overlapped with HTTP ones, since
	    packets arrive much earlier and therefore out-of-order.

2013-03-05  Xavi Artigas  <xartigas@fluendo.com>

	* lib/fludownloader.h:
	  - A bit of comments

2013-03-05  Xavi Artigas  <xartigas@fluendo.com>

	* lib/fludownloader.c: (fludownloader_abort_task):
	* lib/fludownloader.h:
	  - Small change to API to avoid redundant parameter.

2013-03-05  Xavi Artigas  <xartigas@fluendo.com>

	* lib/fludownloader.c: (_report_task_done), (_write_function),
	(_process_curl_messages):
	  - Handle correctly the case where a single call to curl_process() produces
	    data for two tasks.

2013-03-05  Xavi Artigas  <xartigas@fluendo.com>

	* lib/fludownloader.c:
	* lib/fludownloader.h:
	  - Return const gchar to make sure it is not free'd.

2013-03-05  Xavi Artigas  <xartigas@fluendo.com>

	* examples/multidl.c: (done_cb):
	* lib/fludownloader.c: (fludownloader_task_get_url):
	* lib/fludownloader.h:
	  - Add API to report the URL of a task. This is EXPERIMENTAL, as the lock
	    cannot be taken since we might want to call this from the data callback.

2013-03-05  Xavi Artigas  <xartigas@fluendo.com>

	* examples/multidl.c: (data_cb), (done_cb), (main):
	* lib/fludownloader.c: (_write_function), (_process_curl_messages),
	(fludownloader_new_task), (fludownloader_lock),
	(fludownloader_unlock):
	* lib/fludownloader.h:
	  - Add API to report the task that produced a data or done callback.
	  - Add API to lock/unlock the library and allow adding a task without taking
	    the library lock. This allows adding tasks in bucnhes.

2013-03-05  Xavi Artigas  <xartigas@fluendo.com>

	* fludownloader.pc.in:
	  - Add missing file.

2013-02-28  Xavi Artigas  <xartigas@fluendo.com>

	* lib/fludownloader.c: (fludownloader_init),
	(fludownloader_shutdown):
	  - Add init lock, to allow multithreaded initialization.

2013-02-27  Xavi Artigas  <xartigas@fluendo.com>

	* lib/fludownloader.c: (_remove_task), (_abort_task),
	(_schedule_tasks), (_thread_function), (fludownloader_new_task),
	(fludownloader_abort_task), (fludownloader_abort_all_tasks):
	  - Do not immediately pass all tasks to libCurl. Keep a list and pass them
	    one by one once the current transfer reaches 75% of the file (if known).
	    This allows having only one running task and at most one pipelined when
	    the current one is about to finish, which allows HTTP pipelining AND
	    reduces the risk of having to abort a transfer (which implies a new TCP
	    connection).

2013-02-26  Xavi Artigas  <xartigas@fluendo.com>

	* examples/multidl.c: (data_cb), (main):
	  - Update example.

2013-02-26  Xavi Artigas  <xartigas@fluendo.com>

	* lib/fludownloader.c:
	  - Add comments and rearrange structure members.

2013-02-26  Xavi Artigas  <xartigas@fluendo.com>

	* lib/fludownloader.c: (_header_function),
	(fludownloader_new_task):
	  - Parse HTTP headers to find out file sizes (still unused).

2013-02-25  Xavi Artigas  <xartigas@fluendo.com>

	* examples/multidl.c: (done_cb):
	* lib/fludownloader.c: (_write_function), (_process_curl_messages):
	* lib/fludownloader.h:
	  - Report downloaded size upon task completion. This seems the only way to
	    detect errors when dealing with the FILE protocol.
	  - Update example.

2013-02-20  Xavi Artigas  <xartigas@fluendo.com>

	* examples/multidl.c: (data_cb), (main):
	* lib/fludownloader.c: (_write_function):
	* lib/fludownloader.h:
	  - Allow tasks to be aborted from the callback. Update example.

2013-02-20  Xavi Artigas  <xartigas@fluendo.com>

	* lib/fludownloader.c: (_write_function), (_is_task_running),
	(_remove_task), (_abort_task), (_process_curl_messages),
	(_thread_function), (fludownloader_destroy),
	(fludownloader_new_task), (fludownloader_abort_task),
	(fludownloader_abort_all_tasks):
	* lib/fludownloader.h:
	  - Allow the current downloading task to be aborted immediately.
	    This makes libCurl start a new TCP stream, but it is still faster than
	    waiting for the current task to complete, if it is a big file.

2013-02-19  Xavi Artigas  <xartigas@fluendo.com>

	* lib/fludownloader.c: (fludownloader_init),
	(fludownloader_shutdown):
	  - Add global init/cleanup of libCurl. Init was done automatically before,
	    but it is nicer to call it explicitly.

2013-02-19  Xavi Artigas  <xartigas@fluendo.com>

	* examples/multidl.c: (main):
	* lib/fludownloader.c: (_process_curl_messages),
	(fludownloader_new_task), (fludownloader_abort_task),
	(fludownloader_abort_all_tasks),
	(fludownloader_abort_all_pending_tasks):
	* lib/fludownloader.h:
	  - Add API to abort all PENDING tasks (allowing the current one to finish)
	  - Update example.
	  - Add safety checks on input parameters

2013-02-19  Xavi Artigas  <xartigas@fluendo.com>

	* configure.ac:
	  - Having fun with autotools.

2013-02-19  Xavi Artigas  <xartigas@fluendo.com>

	* examples/multidl.c: (main):
	* lib/fludownloader.c: (fludownloader_new_task):
	* lib/fludownloader.h:
	  - Support for range requests. Update example.

2013-02-19  Xavi Artigas  <xartigas@fluendo.com>

	* Makefile.am:
	* configure.ac:
	  - Deploy pc and header files.

2013-02-18  Xavi Artigas  <xartigas@fluendo.com>

	* examples/multidl.c: (main):
	  - Add a couple more downloads to the example, for added stress.

2013-02-18  Xavi Artigas  <xartigas@fluendo.com>

	* lib/fludownloader.c: (_thread_function):
	  - Fix select() call.

2013-02-18  Xavi Artigas  <xartigas@fluendo.com>

	* examples/multidl.c: (data_cb), (main):
	* lib/fludownloader.c: (_remove_task), (_thread_function),
	(fludownloader_destroy), (fludownloader_new_task),
	(fludownloader_abort_task), (fludownloader_abort_all_tasks):
	* lib/fludownloader.h:
	  - Add abort_all_tasks method
	  - Comments

2013-02-15  Xavi Artigas  <xartigas@fluendo.com>

	* examples/multidl.c: (data_cb), (done_cb), (main):
	* lib/fludownloader.c: (fludownloader_new),
	(fludownloader_new_task):
	* lib/fludownloader.h:
	  - gst-indent

2013-02-15  Xavi Artigas  <xartigas@fluendo.com>

	* Makefile.am:
	* configure.ac:
	* examples/multidl.c: (data_cb), (done_cb), (main):
	* lib/fludownloader.c: (_write_function), (_remove_task),
	(_process_curl_messages), (_thread_function), (fludownloader_init),
	(fludownloader_shutdown), (fludownloader_new),
	(fludownloader_destroy), (fludownloader_new_task),
	(fludownloader_abort_task):
	* lib/fludownloader.h:
	  - First working version of the library and example file.
